---
title: "Proyecciones RMNA 2025-26"
format: html-pdf
editor: visual
---

```{r setup, include = FALSE}
library(tidyverse)
library(stringr)
library(unhcrthemes)
library(scales)
 
# Source: Movements Report
data <- read.csv("Movement_Report.csv") 

data$Mes <- gsub(" ", "", data$Mes)

names(data) <- gsub("\\.", "", names(data))

# Two starting dates for two scenarios
fecha_1 <- "2023-12-31"
fecha_2 <- "2023-04-01"

# Stock for 2024
stock_2024 <- 1542004

# Calculation for Date 1
data_1 <- data |> 
  mutate(Fecha = paste(Mes, "-01", sep="")) |> 
  mutate(Fecha = as.Date(Fecha)) |> 
  filter(Fecha >= fecha_1) |> 
  select(Mes:"IrregularesTOTALSalidas") |> 
  group_by(Nacionalidad) |> 
  summarize(across(contains("egulare"), list(mean = ~mean(., na.rm = TRUE), min = ~min(., na.rm = TRUE), max = ~max(., na.rm = TRUE)), .names = "{.col}_{.fn}")) |> 
  pivot_longer(-1, names_to = c("Tipo", "Calc"), names_sep = "_", values_to = "Tot") |> 
  mutate(Tot = round(Tot, 0)) |> 
  ungroup() |> 
  filter(!grepl('DTM', Tipo)) |> 
  pivot_wider(names_from = Calc, values_from = Tot) |> 
  mutate(Flujo = if_else(str_detect(Tipo, "Regulares"), "Regulares", "Irregulares")) |> 
  mutate(Punto = if_else(str_detect(Tipo, "Tumbes"), "Tumbes", if_else(str_detect(Tipo, "Tacna"), "Tacna", if_else(str_detect(Tipo, "Puno"), "Puno", if_else(str_detect(Tipo, "Madre"), "MdD", if_else(str_detect(Tipo, "Aeropuerto"), "Aeropuerto", if_else(str_detect(Tipo, "otros"), "Otros", "Total"))))))) |>
  mutate(Direct = if_else(str_detect(Tipo, "Entradas"), "Entradas", "Salidas")) |> 
  select(Nacionalidad, Punto, Flujo, Direct, mean, min, max) |> 
  filter(Nacionalidad == "VEN")

data_1 <- lapply(data_1, function(x) {
  x[is.infinite(x)] <- NA
  x[is.nan(x)] <- NA
  return(x)
})

data_1 <- as.data.frame(data_1)
data_1 <- data_1[complete.cases(data_1), ]


# Cálculo escenarios desde Fecha 2
data_2 <- data |> 
  mutate(Fecha = paste(Mes, "-01", sep="")) |> 
  mutate(Fecha = as.Date(Fecha)) |> 
  filter(Fecha >= fecha_2) |> 
  select(Mes:"IrregularesTOTALSalidas") |> 
  group_by(Nacionalidad) |> 
  summarize(across(contains("egulare"), list(mean = ~mean(., na.rm = TRUE), min = ~min(., na.rm = TRUE), max = ~max(., na.rm = TRUE)), .names = "{.col}_{.fn}")) |> 
  pivot_longer(-1, names_to = c("Tipo", "Calc"), names_sep = "_", values_to = "Tot") |> 
  mutate(Tot = round(Tot, 0)) |> 
  ungroup() |> 
  filter(!grepl('DTM', Tipo)) |> 
  pivot_wider(names_from = Calc, values_from = Tot) |> 
  mutate(Flujo = if_else(str_detect(Tipo, "Regulares"), "Regulares", "Irregulares")) |> 
  mutate(Punto = if_else(str_detect(Tipo, "Tumbes"), "Tumbes", if_else(str_detect(Tipo, "Tacna"), "Tacna", if_else(str_detect(Tipo, "Puno"), "Puno", if_else(str_detect(Tipo, "Madre"), "MdD", if_else(str_detect(Tipo, "Aeropuerto"), "Aeropuerto", if_else(str_detect(Tipo, "otros"), "Otros", "Total"))))))) |>
  mutate(Direct = if_else(str_detect(Tipo, "Entradas"), "Entradas", "Salidas")) |> 
  select(Nacionalidad, Punto, Flujo, Direct, mean, min, max) |> 
  filter(Nacionalidad == "VEN")

data_2 <- lapply(data_2, function(x) {
  x[is.infinite(x)] <- NA
  x[is.nan(x)] <- NA
  return(x)
})

data_2 <- as.data.frame(data_2)
data_2 <- data_2[complete.cases(data_2), ]


```

## Saldo v1: Flujos 2024

Fecha de referencia: desde `r fecha_1` a 2024-04-31

::: columns
::: {.column width="80%"}
```{r, echo = FALSE, warning = FALSE}

saldo <- function(direction, var){
  result = data_1 |> 
    filter(Direct == direction) |>
    select(Direct, {{ var }}) |> 
    group_by(Direct) |> 
    summarize(value = sum({{ var }}, na.rm = TRUE))
    return(result$value)
}

entries_mean_1 <- saldo("Entradas", mean) / 30
entries_min_1 <- saldo("Entradas", min) / 30
entries_max_1 <- saldo("Entradas", max) / 30

exits_mean_1 <- saldo("Salidas", mean) / 30
exits_min_1 <- saldo("Salidas", min) / 30
exits_max_1 <- saldo("Salidas", max) / 30

# entries <- list(mean_1 = entries_mean_1, min_1 = entries_min_1, max_1 = entries_max_1)
# exits <- list(mean_1 = exits_mean_1, min_1 = exits_min_1, max_1 = exits_max_1)

result_matrix <- matrix(nrow = 3, ncol = 3)
rownames(result_matrix) <- c("entries_mean_1", "entries_min_1", "entries_max_1")
colnames(result_matrix) <- c("exits_mean_1", "exits_min_1", "exits_max_1")

result_matrix["entries_mean_1", "exits_mean_1"] <- entries_mean_1 - exits_mean_1
result_matrix["entries_mean_1", "exits_min_1"]  <- entries_mean_1 - exits_min_1
result_matrix["entries_mean_1", "exits_max_1"]  <- entries_mean_1 - exits_max_1

result_matrix["entries_min_1", "exits_mean_1"]  <- entries_min_1 - exits_mean_1
result_matrix["entries_min_1", "exits_min_1"]   <- entries_min_1 - exits_min_1
result_matrix["entries_min_1", "exits_max_1"]   <- entries_min_1 - exits_max_1

result_matrix["entries_max_1", "exits_mean_1"]  <- entries_max_1 - exits_mean_1
result_matrix["entries_max_1", "exits_min_1"]   <- entries_max_1 - exits_min_1
result_matrix["entries_max_1", "exits_max_1"]   <- entries_max_1 - exits_max_1

saldo_diario <- as.data.frame(as.table(result_matrix)) |> 
  mutate(across(Freq,\(x) round(x, 0))) |> 
  rename(Entries = Var1) |> 
  rename(Exits = Var2) |> 
  mutate(Entries = if_else(Entries == "entries_max_1", "Máximo Ingresos", if_else(Entries == "entries_min_1", "Mínimo Ingresos", "Promedio Ingresos"))) |> 
  mutate(Exits = if_else(Exits == "exits_max_1", "Máximo Salidas", if_else(Exits == "exits_min_1", "Mínimo Salidas", "Promedio Salidas")))


#print(result_matrix)

ggplot(
  saldo_diario |> 
    mutate(Entries = fct_relevel(Entries, c("Máximo Ingresos", "Mínimo Ingresos", "Promedio Ingresos")),
                Exits = fct_relevel(Exits, c("Promedio Salidas", "Mínimo Salidas", "Máximo Salidas"))),
  aes(
    x = Exits,
    y = Entries
  )
) +
  geom_tile(aes(
    fill = Freq
  ),
  color = "white",
  lwd = .5,
  linetype = 1
  ) +
  labs(
    title = "Saldo diario 2025-26"
  ) +
  scale_x_discrete(
    labels = scales::label_wrap(3),
    position = "top"
  ) +
  scale_y_discrete(
    labels = scales::label_wrap(3)
  ) +
  scale_fill_stepsn(
    colors = unhcr_pal(n = 4, "pal_blue"),
    n.break = 3,
    name = "Saldo diario"
  ) +
  coord_fixed() +
   geom_text(aes(label = Freq), colour = "white", size = 3
  ) +
  theme_unhcr(
    font_size = 13,
    grid = FALSE,
    axis = FALSE,
    axis_title = FALSE,
    legend_title = TRUE
  )



```

La tabla de calor enseña las posibles combinaciones de flujos observados, dividiendo entradas y salidas en promedio, mínimos y máximos. La primera celda arriba la izquierda, por ejemplo, enseña el saldo diario subtrayendo el promedio de salidas al promedio de entradas durante el periodo de observación.

:::

::: {.column width="20%"}
 \

**Rangos:**  \
 \

**`r round(sum(entries_max_1 - exits_min_1), 0)`** <br/> Saldo máximo <br/> (`r format(round(sum(entries_max_1 - exits_min_1), 0)*365, big.mark = ",")` anual)

 \

**`r round(sum(entries_mean_1 - exits_mean_1), 0)`** <br/> Saldo promedio <br/> (`r format(round(sum(entries_mean_1 - exits_mean_1), 0)*365, big.mark = ",")` anual)

 \

**`r round(sum(entries_min_1 - exits_max_1), 0)`** <br/> Saldo mínimo (`r format(round(sum(entries_min_1 - exits_max_1), 0)*365, big.mark = ",")` anual)
:::
:::

```{r, echo = FALSE, warning = FALSE}

year <- c(2024, 2025, 2026)
mean_1 <- c(stock_2024, stock_2024 + (sum(entries_mean_1 - exits_mean_1) * 365), stock_2024 + ((sum(entries_mean_1 - exits_mean_1) * 365))*2)
min_1 <- c(stock_2024, stock_2024 + (sum(entries_min_1 - exits_max_1) * 365), stock_2024 + ((sum(entries_min_1 - exits_max_1) * 365))*2)
max_1 <- c(stock_2024, stock_2024 + (sum(entries_max_1 - exits_min_1) * 365), stock_2024 + ((sum(entries_max_1 - exits_min_1) * 365))*2)

stock_proj_1 <- data.frame(year, mean_1, min_1, max_1) |> 
  pivot_longer(-1, names_to = "type", values_to = "stock") |> 
  mutate(type = str_sub(type, end = -3)) |> 
  mutate(year = as.character(year)) |> 
  mutate(type = if_else(type == "mean", "Promedio", if_else(type == "min", "Mínimo", "Máximo")))


# Plot
ggplot(stock_proj_1 |> 
         mutate(type = fct_relevel(type, c("Promedio", "Mínimo", "Máximo")),
                year = fct_relevel(year, c("2026", "2025", "2024")))) +
  geom_col(aes(
    x = type,
    y = stock,
    fill = fct_rev(year)
  ),
  position = position_dodge(width = 0.7),
  width = 0.6
  ) +
  geom_text(aes(
    x = type,
    y = stock,
    group = fct_rev(year),
    label = round(stock / 1e6, 3)
  ),
  position = position_dodge(width = 0.7),
  vjust = -1,
  size = 8 / .pt
  ) +
  scale_fill_unhcr_d(
    palette = "pal_unhcr",
    nmax = 3,
    order = c(3, 2, 1)
  ) +
  labs(
    title = "Proyecciones 2025-26",
    subtitle = "En millones de personas"
  ) +
  # scale_x_continuous(breaks = pretty_breaks(n = 4)) +
  # scale_y_continuous(expand = expansion(c(0, 0.1))) +
  theme_unhcr(
    grid = FALSE,
    axis = "x",
    axis_title = FALSE,
    axis_text = "x"
  ) +
  guides(fill = guide_legend(nrow = 1, byrow = TRUE)) +
  ylim(0, max(stock_proj_1$stock)*1.1)


```

## Saldo v2: Últimos 12 meses

Fecha de referencia: desde `r fecha_2` a 2024-04-31

::: columns
::: {.column width="80%"}
```{r, echo = FALSE, warning = FALSE}

saldo <- function(direction, var){
  result = data_2 |> 
    filter(Direct == direction) |>
    select(Direct, {{ var }}) |> 
    group_by(Direct) |> 
    summarize(value = sum({{ var }}, na.rm = TRUE))
    return(result$value)
}

entries_mean_2 <- saldo("Entradas", mean) / 30
entries_min_2 <- saldo("Entradas", min) / 30
entries_max_2 <- saldo("Entradas", max) / 30

exits_mean_2 <- saldo("Salidas", mean) / 30
exits_min_2 <- saldo("Salidas", min) / 30
exits_max_2 <- saldo("Salidas", max) / 30

# entries <- list(mean_2 = entries_mean_2, min_2 = entries_min_2, max_2 = entries_max_2)
# exits <- list(mean_2 = exits_mean_2, min_2 = exits_min_2, max_2 = exits_max_2)

result_matrix <- matrix(nrow = 3, ncol = 3)
rownames(result_matrix) <- c("entries_mean_2", "entries_min_2", "entries_max_2")
colnames(result_matrix) <- c("exits_mean_2", "exits_min_2", "exits_max_2")

result_matrix["entries_mean_2", "exits_mean_2"] <- entries_mean_2 - exits_mean_2
result_matrix["entries_mean_2", "exits_min_2"]  <- entries_mean_2 - exits_min_2
result_matrix["entries_mean_2", "exits_max_2"]  <- entries_mean_2 - exits_max_2

result_matrix["entries_min_2", "exits_mean_2"]  <- entries_min_2 - exits_mean_2
result_matrix["entries_min_2", "exits_min_2"]   <- entries_min_2 - exits_min_2
result_matrix["entries_min_2", "exits_max_2"]   <- entries_min_2 - exits_max_2

result_matrix["entries_max_2", "exits_mean_2"]  <- entries_max_2 - exits_mean_2
result_matrix["entries_max_2", "exits_min_2"]   <- entries_max_2 - exits_min_2
result_matrix["entries_max_2", "exits_max_2"]   <- entries_max_2 - exits_max_2

saldo_diario <- as.data.frame(as.table(result_matrix)) |> 
  mutate(across(Freq,\(x) round(x, 0))) |> 
  rename(Entries = Var1) |> 
  rename(Exits = Var2) |> 
  mutate(Entries = if_else(Entries == "entries_max_2", "Máximo Ingresos", if_else(Entries == "entries_min_2", "Mínimo Ingresos", "Promedio Ingresos"))) |> 
  mutate(Exits = if_else(Exits == "exits_max_2", "Máximo Salidas", if_else(Exits == "exits_min_2", "Mínimo Salidas", "Promedio Salidas")))


#print(result_matrix)

ggplot(
  saldo_diario |> 
    mutate(Entries = fct_relevel(Entries, c("Máximo Ingresos", "Mínimo Ingresos", "Promedio Ingresos")),
                Exits = fct_relevel(Exits, c("Promedio Salidas", "Mínimo Salidas", "Máximo Salidas"))),
  aes(
    x = Exits,
    y = Entries
  )
) +
  geom_tile(aes(
    fill = Freq
  ),
  color = "white",
  lwd = .5,
  linetype = 1
  ) +
  labs(
    title = "Saldo diario 2025-26"
  ) +
  scale_x_discrete(
    labels = scales::label_wrap(3),
    position = "top"
  ) +
  scale_y_discrete(
    labels = scales::label_wrap(3)
  ) +
  scale_fill_stepsn(
    colors = unhcr_pal(n = 4, "pal_blue"),
    n.break = 3,
    name = "Saldo diario"
  ) +
  coord_fixed() +
   geom_text(aes(label = Freq), colour = "white", size = 3
  ) +
  theme_unhcr(
    font_size = 13,
    grid = FALSE,
    axis = FALSE,
    axis_title = FALSE,
    legend_title = TRUE
  )



```

La tabla de calor enseña las posibles combinaciones de flujos observados, dividiendo entradas y salidas en promedio, mínimos y máximos. La primera celda arriba la izquierda, por ejemplo, enseña el saldo diario subtrayendo el promedio de salidas al promedio de entradas durante el periodo de observación.

:::

::: {.column width="20%"}
 \

**Rangos:**  \
 \

**`r round(sum(entries_max_2 - exits_min_2), 0)`** <br/> Saldo máximo <br/> (`r format(round(sum(entries_max_2 - exits_min_2), 0)*365, big.mark = ",")` anual)

 \

**`r round(sum(entries_mean_2 - exits_mean_2), 0)`** <br/> Saldo promedio <br/> (`r format(round(sum(entries_mean_2 - exits_mean_2), 0)*365, big.mark = ",")` anual)

 \

**`r round(sum(entries_min_2 - exits_max_2), 0)`** <br/> Saldo mínimo (`r format(round(sum(entries_min_2 - exits_max_2), 0)*365, big.mark = ",")` anual)
:::
:::

```{r, echo = FALSE, warning = FALSE}

year <- c(2024, 2025, 2026)
mean_2 <- c(stock_2024, stock_2024 + (sum(entries_mean_2 - exits_mean_2) * 365), stock_2024 + ((sum(entries_mean_2 - exits_mean_2) * 365))*2)
min_2 <- c(stock_2024, stock_2024 + (sum(entries_min_2 - exits_max_2) * 365), stock_2024 + ((sum(entries_min_2 - exits_max_2) * 365))*2)
max_2 <- c(stock_2024, stock_2024 + (sum(entries_max_2 - exits_min_2) * 365), stock_2024 + ((sum(entries_max_2 - exits_min_2) * 365))*2)

stock_proj_2 <- data.frame(year, mean_2, min_2, max_2) |> 
  pivot_longer(-1, names_to = "type", values_to = "stock") |> 
  mutate(type = str_sub(type, end = -3)) |> 
  mutate(year = as.character(year)) |> 
  mutate(type = if_else(type == "mean", "Promedio", if_else(type == "min", "Mínimo", "Máximo")))


# Plot
ggplot(stock_proj_2 |> 
         mutate(type = fct_relevel(type, c("Promedio", "Mínimo", "Máximo")),
                year = fct_relevel(year, c("2026", "2025", "2024")))) +
  geom_col(aes(
    x = type,
    y = stock,
    fill = fct_rev(year)
  ),
  position = position_dodge(width = 0.7),
  width = 0.6
  ) +
  geom_text(aes(
    x = type,
    y = stock,
    group = fct_rev(year),
    label = round(stock / 1e6, 3)
  ),
  position = position_dodge(width = 0.7),
  vjust = -1,
  size = 8 / .pt
  ) +
  scale_fill_unhcr_d(
    palette = "pal_unhcr",
    nmax = 3,
    order = c(3, 2, 1)
  ) +
  labs(
    title = "Proyecciones 2025-26",
    subtitle = "En millones de personas"
  ) +
  # scale_x_continuous(breaks = pretty_breaks(n = 4)) +
  # scale_y_continuous(expand = expansion(c(0, 0.1))) +
  theme_unhcr(
    grid = FALSE,
    axis = "x",
    axis_title = FALSE,
    axis_text = "x"
  ) +
  guides(fill = guide_legend(nrow = 1, byrow = TRUE)) +
  ylim(0, max(stock_proj_2$stock)*1.1)


```
